server:
  port: ${TICKET_PORT}

spring:
  application:
    name: ticket-service

  datasource:
    url: ${RDS_HOST}
    username: ${RDS_USERNAME}
    password: ${RDS_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: create

  kafka:
    bootstrap-servers: b-1.iphomsk.g0ve3u.c4.kafka.ap-northeast-2.amazonaws.com:9092, b-2.iphomsk.g0ve3u.c4.kafka.ap-northeast-2.amazonaws.com:9092
    consumer:
      group-id: ${spring.application.name}-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.json.trusted.packages: '*'
        specific-value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka