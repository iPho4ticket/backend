spring:
  application:
    name: seat-service
  jpa:
    hibernate:
      ddl-auto: update  # 데이터베이스 스키마를 자동으로 업데이트
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
  datasource:
    url: ${RDS_HOST}
    username: ${RDS_USERNAME}
    password: ${RDS_PASSWORD}

  data:
    redis:
      host: redis
      port: 6379
      username: default
      password: systempass
      connect-timeout: 3000
      timeout: 3000


  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: ${spring.application.name}-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.json.trusted.packages: '*'
        specific-value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

server:
  port: ${SEAT_PORT}
